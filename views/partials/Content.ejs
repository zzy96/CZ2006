
<div class="col-xs-12">
    <div class="alert alert-success">
        <h2 id="time"></h2>
    </div>
    <div id="wait" style="display:none" class="alert alert-success">
        <p>There is taxi around your location. Wait nearby</p>
    </div>
    <div id="recommend" style="display:none" class="alert alert-info">
        <p>Go to the recommended waiting location</p>
    </div>
    <div id="call"  style="display:none" class="alert alert-danger">
      <p>No nearby taxi, call a cab<br>
        <% for (int i=0;i<taxiCompany.length;i++){ %>
          taxi company: <%= taxiCompany[i].name %><br>
          number: <%= taxiCompany[i].phone %><br>
        <% } %>
      </p>
    </div>
    <div id="map" class="col-xs-12" style="height:600px" ></div>



      <script type="text/javascript" src="http://gothere.sg/jsapi?sensor=false"> </script>
      <script type="text/javascript">
          gothere.load("maps");
          var map;
          var taxis = [];
          var coordinates;
          var estTime = 9999;
          var userLon;
          var userLat;

          function load(){
            confirm("Do you like to share your location with TaxiMe? Taxis will find you more easily next time");
          }

          function getLocation() {
        		if (navigator.geolocation) {
            		navigator.geolocation.getCurrentPosition(function(position){
            			userLon = position.coords.longitude;
                  userLat = position.coords.latitude;
            			coordinates = new GLatLng(userLat, userLon);
            			map.setCenter(coordinates, 15);
        					var marker = new GMarker(coordinates);
    		    			map.addOverlay(marker);
            		});
        		} else {
        			  userLon = 103.819836;
            		userLat = 1.362083;
            		map.setCenter(new GLatLng(userLat, userLon), 15);
            		alert("Location Not Available! Please turn on your GPS and try again later!");
            	}
    		  }
          function initialize() {
            if (GBrowserIsCompatible()) {
              // Create the Gothere map object.
              map = new GMap2(document.getElementById("map"));
              map.disableContinuousZoom();
              map.disableScrollWheelZoom();
              map.disableDoubleClickZoom();
              // Set the center of the map.
              getLocation();
              // Add zoom controls on the top left of the map.
              map.addControl(new GSmallMapControl());
              // Add a scale bar at the bottom left of the map.
              map.addControl(new GScaleControl());
            }
            else{
                alert("Your browser is not compatible! Please change to another browser!");
            }
          }
          gothere.setOnLoadCallback(initialize);

          function showTaxis(){
            var marker;
            var Taxicoordinates;
            var i;
            var Gi = new GIcon(G_DEFAULT_ICON);
            Gi.image = "./img/taxi.png";
            Gi.shadow = "";
            var options = {
                icon: Gi,
                clickable: true,
                draggable: false
            };
            if (taxis.length < 100){
                alert("MyTransport.sg is facing downtime and the issue is being resolved! Please try again later!");
                return false;
            }
            for (i=0;i<taxis.length;i++){
              if (calculateDistance(userLon,userLat, taxis[i].Longitude, taxis[i].Latitude) < 5){
                Taxicoordinates = new GLatLng(taxis[i].Latitude, taxis[i].Longitude);
                marker = new GMarker(Taxicoordinates, options);
                map.addOverlay(marker);
              }
            }
            estTime = calculateTime(nearestTaxiDis().distance);
            if (estTime > 10){
                document.getElementById("time").innerHTML = "No taxis nearby!"
            }
            else{
                document.getElementById("time").innerHTML = "Estimated waiting time is: " + estTime + " minutes!";
            }
            return true;
          }

          function nearestTaxiDis(){
              var taxiLat, taxiLon;
              nearestDis = 99999;
              nearest = 0;
              for (i=0;i<taxis.length;i++){
                taxiLat = taxis[i].Latitude;
                taxiLon = taxis[i].Longitude;
                distance = calculateDistance(userLon, userLat, taxiLon, taxiLat);
                // if (distance<1){
                //   console.log("taxiLon: "+taxiLon);
                //   console.log("taxiLat:"+taxiLat);
                //   console.log("userLon: "+userLon);
                //   console.log("userLat:"+userLat);
                // }
                if (distance < nearestDis){
                    nearestDis = distance;
                    nearest = i;
                }
              }
              console.log("nearest Taxi Distance get!");
              console.log(nearestDis);
              console.log(taxis[nearest]);
              return ({"distance":nearestDis,"taxi":taxis[nearest]});
          }

          function calculateDistance(userLon, userLat, taxiLon, taxiLat){
        	  return Math.sqrt(Math.pow((userLon-taxiLon)/360*40000,2)+Math.pow((userLat-taxiLat)/360*40000,2));
          }

          function calculateTime(distance){
              console.log(Math.round(distance*3));
              return (Math.round(distance*3));
          }


          function showRecommendation(){
            if (estTime > 10){
              document.getElementById("call").style.display="block";
            }else if (estTime <= 3){
              document.getElementById("wait").style.display="block";
            }else{
              document.getElementById("recommend").style.display="block";
              var marker;
              var coordinates;
              var i;
              var Gi = new GIcon(G_DEFAULT_ICON);
              Gi.image = "./img/user.png";
              Gi.shadow = "";
              var options = {
                  icon: Gi,
                  clickable: true,
                  draggable: false
              };
              coordinates = new GLatLng(nearestTaxiDis().taxi.Latitude, nearestTaxiDis().taxi.Longitude);
              marker = new GMarker(coordinates, options);
              map.addOverlay(marker);
              // var directions = new GDirections(map);
              // var options = {travelMode:G_TRAVEL_MODE_TAXI};
              // directions.load("from: @"+userLat+","+userLon+" to: @"+latitude+","+longitude, options);
            }
          }

      </script>

      <% for (var i=0;i<taxis.length;i++){ %>

        <script>
          taxis["<%= i %>"] = {
            Latitude: "<%= taxis[i].Latitude %>",
            Longitude: "<%= taxis[i].Longitude %>"
          };
        </script>

      <% } %>

</div>
