<div class="col-xs-12 main">
  <div id="map" class="col-xs-12" style="height:600px" ></div>
  <div>
      <p id="time"></p>
  </div>
  <div id="rec" style="display:none" class="col-xs-12">
    <% if (recommend.valid){ %>
      <p>Go to the recommended waiting location</p>
      <script>
        var recommend = {
          Latitude: "<%= recommend.Latitude %>",
          Longitude: "<%= recommend.Longitude %>"
        };
      </script>
    <% }else{ %>
      <p>No nearby taxi, call taxi company number: <%= number %></p>
    <% } %>
  </div>

      <script type="text/javascript" src="http://gothere.sg/jsapi?sensor=false"> </script>
      <script type="text/javascript">
          gothere.load("maps");
          var map;
          var taxis = [];
          var coordinates;
          var estTime = 9999;
          var userLon;
          var userLat;
          function getLocation() {
        		if (navigator.geolocation) {
            		navigator.geolocation.getCurrentPosition(function(position){
            			userLon = position.coords.longitude;
            			userLat = position.coords.latitude;
            			coordinates = new GLatLng(userLat, userLon);
            			map.setCenter(coordinates, 15);
        					var marker = new GMarker(coordinates);
    		    			map.addOverlay(marker);
            		});
        		} else {
        			  userLon = 103.819836;
            		userLat = 1.362083;
            		map.setCenter(new GLatLng(userLat, userLon), 15);
            		alert("Location Not Available!");
            	}
    		  }
          function initialize() {
            if (GBrowserIsCompatible()) {
              // Create the Gothere map object.
              map = new GMap2(document.getElementById("map"));
              map.disableContinuousZoom();
              map.disableScrollWheelZoom();
              map.disableDoubleClickZoom();
              // Set the center of the map.
              getLocation();
              // Add zoom controls on the top left of the map.
              map.addControl(new GSmallMapControl());
              // Add a scale bar at the bottom left of the map.
              map.addControl(new GScaleControl());
            }
          }
          gothere.setOnLoadCallback(initialize);

          function showTaxis(){
            var marker;
            var Taxicoordinates;
            var i;
            var Gi = new GIcon(G_DEFAULT_ICON);
            console.log("miao?");
            Gi.image = "./img/taxi.png";
            Gi.shadow = "";
            var options = {
                icon: Gi,
                clickable: true,
                draggable: true
            };
            for (i=0;i<taxis.length;i++){
              Taxicoordinates = new GLatLng(taxis[i].Latitude, taxis[i].Longitude);
              marker = new GMarker(Taxicoordinates, options);
              map.addOverlay(marker);
            }
            console.log("hello?");
            nearestTaxiDis = nearestTaxiDis();
            console.log("nearest Taxi Distance is:");
            console.log(nearestTaxiDis);
            estTime = calculateTime(nearestTaxiDis);
            console.log("Est time is:");
            console.log(estTime);
            if (estTime > 20){
                document.getElementById("time").innerHTML = "No taxis nearby!"
            }
            else{
                document.getElementById("time").innerHTML = "Estimated waiting time is:" + estTime + " minutes!";
            }
          }

          function nearestTaxiDis(){
              nearestDis = 99999;
              console.log(taxis[0].Latitude);
              console.log(userLon);
              console.log(userLat);
              for (i=0;i<taxis.length;i++){
                taxiLat = taxis[i].Latitude;
                taxiLon = taxis[i].Longitude;
                distance = calculateDistance(userLon, userLat, taxiLon, taxiLat);
                // console.log(distance);
                if (distance < nearestDis){
                    nearestDis = distance;
                }
              }
              console.log("nearest Taxi Distance get!");
              console.log(nearestDis);
              return (nearestDis);
          }

          function calculateDistance(userLon, userLat, taxiLon, taxiLat){
        	  return Math.sqrt(Math.pow((userLon-taxiLon)/360*40000,2)+Math.pow((userLat-taxiLat)/360*40000,2));
          }

          function calculateTime(distance){
              return (Math.round(distance*3));
          }


          function showRecommendation(){
            document.getElementById("rec").style.display="block";
            if (recommend){
              var marker;
              var recommendCoordinates;
              var i;
              var Gi = new GIcon(G_DEFAULT_ICON);
              Gi.image = "./img/taxi.png";
              Gi.shadow = "";
              var options = {
                  icon: Gi,
                  clickable: true,
                  draggable: true
              };
              recommendCoordinates = new GLatLng(recommend.Latitude, recommend.Longitude);
              marker = new GMarker(recommendCoordinates, options);
              map.addOverlay(marker);
            }
          }

      </script>

      <% for (var i=0;i<taxis.length;i++){ %>

        <script>
          taxis["<%= i %>"] = {
            Latitude: "<%= taxis[i].Latitude %>",
            Longitude: "<%= taxis[i].Longitude %>"
          };
        </script>

      <% } %>

</div>
